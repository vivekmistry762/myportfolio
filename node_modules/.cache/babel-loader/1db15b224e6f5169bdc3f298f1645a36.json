{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isFQDN;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar default_fqdn_options = {\n  require_tld: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_numeric_tld: false\n};\n\nfunction isFQDN(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, default_fqdn_options);\n  /* Remove the optional trailing dot before checking validity */\n\n  if (options.allow_trailing_dot && str[str.length - 1] === '.') {\n    str = str.substring(0, str.length - 1);\n  }\n\n  var parts = str.split('.');\n  var tld = parts[parts.length - 1];\n\n  if (options.require_tld) {\n    // disallow fqdns without tld\n    if (parts.length < 2) {\n      return false;\n    }\n\n    if (!/^([a-z\\u00a1-\\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {\n      return false;\n    } // disallow spaces && special characers\n\n\n    if (/[\\s\\u2002-\\u200B\\u202F\\u205F\\u3000\\uFEFF\\uDB40\\uDC20\\u00A9\\uFFFD]/.test(tld)) {\n      return false;\n    }\n  } // reject numeric TLDs\n\n\n  if (!options.allow_numeric_tld && /^\\d+$/.test(tld)) {\n    return false;\n  }\n\n  return parts.every(function (part) {\n    if (part.length > 63) {\n      return false;\n    }\n\n    if (!/^[a-z_\\u00a1-\\uffff0-9-]+$/i.test(part)) {\n      return false;\n    } // disallow full-width chars\n\n\n    if (/[\\uff01-\\uff5e]/.test(part)) {\n      return false;\n    } // disallow parts starting or ending with hyphen\n\n\n    if (/^-|-$/.test(part)) {\n      return false;\n    }\n\n    if (!options.allow_underscores && /_/.test(part)) {\n      return false;\n    }\n\n    return true;\n  });\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","isFQDN","_assertString","_interopRequireDefault","require","_merge","obj","__esModule","default_fqdn_options","require_tld","allow_underscores","allow_trailing_dot","allow_numeric_tld","str","options","length","substring","parts","split","tld","test","every","part","module"],"sources":["C:/react js project/myportfolio/node_modules/validator/lib/isFQDN.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isFQDN;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_fqdn_options = {\n  require_tld: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_numeric_tld: false\n};\n\nfunction isFQDN(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, default_fqdn_options);\n  /* Remove the optional trailing dot before checking validity */\n\n  if (options.allow_trailing_dot && str[str.length - 1] === '.') {\n    str = str.substring(0, str.length - 1);\n  }\n\n  var parts = str.split('.');\n  var tld = parts[parts.length - 1];\n\n  if (options.require_tld) {\n    // disallow fqdns without tld\n    if (parts.length < 2) {\n      return false;\n    }\n\n    if (!/^([a-z\\u00a1-\\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {\n      return false;\n    } // disallow spaces && special characers\n\n\n    if (/[\\s\\u2002-\\u200B\\u202F\\u205F\\u3000\\uFEFF\\uDB40\\uDC20\\u00A9\\uFFFD]/.test(tld)) {\n      return false;\n    }\n  } // reject numeric TLDs\n\n\n  if (!options.allow_numeric_tld && /^\\d+$/.test(tld)) {\n    return false;\n  }\n\n  return parts.every(function (part) {\n    if (part.length > 63) {\n      return false;\n    }\n\n    if (!/^[a-z_\\u00a1-\\uffff0-9-]+$/i.test(part)) {\n      return false;\n    } // disallow full-width chars\n\n\n    if (/[\\uff01-\\uff5e]/.test(part)) {\n      return false;\n    } // disallow parts starting or ending with hyphen\n\n\n    if (/^-|-$/.test(part)) {\n      return false;\n    }\n\n    if (!options.allow_underscores && /_/.test(part)) {\n      return false;\n    }\n\n    return true;\n  });\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,MAAlB;;AAEA,IAAIC,aAAa,GAAGC,sBAAsB,CAACC,OAAO,CAAC,qBAAD,CAAR,CAA1C;;AAEA,IAAIC,MAAM,GAAGF,sBAAsB,CAACC,OAAO,CAAC,cAAD,CAAR,CAAnC;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;IAAEN,OAAO,EAAEM;EAAX,CAArC;AAAwD;;AAE/F,IAAIE,oBAAoB,GAAG;EACzBC,WAAW,EAAE,IADY;EAEzBC,iBAAiB,EAAE,KAFM;EAGzBC,kBAAkB,EAAE,KAHK;EAIzBC,iBAAiB,EAAE;AAJM,CAA3B;;AAOA,SAASX,MAAT,CAAgBY,GAAhB,EAAqBC,OAArB,EAA8B;EAC5B,CAAC,GAAGZ,aAAa,CAACF,OAAlB,EAA2Ba,GAA3B;EACAC,OAAO,GAAG,CAAC,GAAGT,MAAM,CAACL,OAAX,EAAoBc,OAApB,EAA6BN,oBAA7B,CAAV;EACA;;EAEA,IAAIM,OAAO,CAACH,kBAAR,IAA8BE,GAAG,CAACA,GAAG,CAACE,MAAJ,GAAa,CAAd,CAAH,KAAwB,GAA1D,EAA+D;IAC7DF,GAAG,GAAGA,GAAG,CAACG,SAAJ,CAAc,CAAd,EAAiBH,GAAG,CAACE,MAAJ,GAAa,CAA9B,CAAN;EACD;;EAED,IAAIE,KAAK,GAAGJ,GAAG,CAACK,KAAJ,CAAU,GAAV,CAAZ;EACA,IAAIC,GAAG,GAAGF,KAAK,CAACA,KAAK,CAACF,MAAN,GAAe,CAAhB,CAAf;;EAEA,IAAID,OAAO,CAACL,WAAZ,EAAyB;IACvB;IACA,IAAIQ,KAAK,CAACF,MAAN,GAAe,CAAnB,EAAsB;MACpB,OAAO,KAAP;IACD;;IAED,IAAI,CAAC,8CAA8CK,IAA9C,CAAmDD,GAAnD,CAAL,EAA8D;MAC5D,OAAO,KAAP;IACD,CARsB,CAQrB;;;IAGF,IAAI,oEAAoEC,IAApE,CAAyED,GAAzE,CAAJ,EAAmF;MACjF,OAAO,KAAP;IACD;EACF,CA1B2B,CA0B1B;;;EAGF,IAAI,CAACL,OAAO,CAACF,iBAAT,IAA8B,QAAQQ,IAAR,CAAaD,GAAb,CAAlC,EAAqD;IACnD,OAAO,KAAP;EACD;;EAED,OAAOF,KAAK,CAACI,KAAN,CAAY,UAAUC,IAAV,EAAgB;IACjC,IAAIA,IAAI,CAACP,MAAL,GAAc,EAAlB,EAAsB;MACpB,OAAO,KAAP;IACD;;IAED,IAAI,CAAC,8BAA8BK,IAA9B,CAAmCE,IAAnC,CAAL,EAA+C;MAC7C,OAAO,KAAP;IACD,CAPgC,CAO/B;;;IAGF,IAAI,kBAAkBF,IAAlB,CAAuBE,IAAvB,CAAJ,EAAkC;MAChC,OAAO,KAAP;IACD,CAZgC,CAY/B;;;IAGF,IAAI,QAAQF,IAAR,CAAaE,IAAb,CAAJ,EAAwB;MACtB,OAAO,KAAP;IACD;;IAED,IAAI,CAACR,OAAO,CAACJ,iBAAT,IAA8B,IAAIU,IAAJ,CAASE,IAAT,CAAlC,EAAkD;MAChD,OAAO,KAAP;IACD;;IAED,OAAO,IAAP;EACD,CAxBM,CAAP;AAyBD;;AAEDC,MAAM,CAACzB,OAAP,GAAiBA,OAAO,CAACE,OAAzB;AACAuB,MAAM,CAACzB,OAAP,CAAeE,OAAf,GAAyBF,OAAO,CAACE,OAAjC"},"metadata":{},"sourceType":"script"}